FEB 12 2021
	getDirection(x, y) will no longer return null if standing on x,y
	atObject2 now uses getDirection(x,y)
	isDoorOpen(x,y) will now say that barbarian walls are closed
	openDoor(x,y) will now properly handle barbarian walls
	getWallObjectIdAtCoord(x,y) added to controller
	Added random offset to autologin to avoid flooding login
	Updated Searos' scripts -- no longer deposit sleeping bags and other updates
	New Searos script added: MineGoldCraftingGuild (Coleslaw only)
	New Searos script added: SmithGearSet
	SBot script arguments fixed again
	HerberTaverly SBot script added
	AIOFighter will now walk back to the starting tile if no NPCs are found
	AIOThiever will now act less dumb when it comes to eating and logging out
	GetMeToArdougne script released. Start in Lumbridge with no GP. Warning, the script is not death, skiller, or pure safe.
	Increased sleep times on GetMeToArdougne


FEB 11 2021
	SBot scripts parameters now function as expected. (If your script no longer functions, please let me know which script.)
	Controller's foodIds now includes new harvesting items. 
	HerbIdentifier script added. This script will identify all herbs in your bank, starting with the highest level you can identify. 
	LimpySnapez script added. This script will harvest snape grass and limpwurt roots in Taverly. Start in Taverly with herb clippers. 
	Updated to latest client JAR (twice)

FEB 10 2021
	AutoLogin now works as expected, regardless of the cause of logout.

FEB 9 2021
	Fixed bug where accounts were getting logged out on Coleslaw for not having a sleeping bag.
	Scripts on uranium will no longer get caught in an infinite loop if you do not have a sleeping bag and do not want to logout.
	logout() will now turn off auto login.
	Implemented Tyler's debugger. You can now see the ids of all objects in the game! Awesome change!

FEB 8 2021
    useItemOnNpc now correctly uses itemId instead of slotId -- if you had a script break this release, it may have been this!
    SleepListener is now fully implemented. When slword.txt is updated by an OCR (likely FOCR), it will now input it into the sleep input box.
    Searos' SmithingVarrock now supports arrowheads.
    Searos' SpinStrings now uses walkToAsync and less likely to break from relogging
    Searos' EssenceMiner now uses walkToAsync so it is less likely to get stuck
    Searos' Woodcutting now uses walkToAsync so it is less likely to get stuck
    Added Searos' ShearSheep, which banks wool from sheep in multiple areas. 
    Added Searos' SelltoShop, which allows you to sell items to shops at a rate beneficial for income.
    Searos' getNearestBank() added to Controller. This function returns the coords of the closest bank.
    Searos' updated shopBuy/shopSell functions to handle multiple item amounts.

	IdleRSC will now sleep on Uranium provided you are running FOCR: https://gitlab.com/idlersc/focr-resurrection

FEB 6 2021
	Merged Red's login fixes -- huge thanks to him for this! Now bots will attempt to re-login when DCed.
	Merged Red's scrollbar fixes on logger -- thanks! Now maybe I'll use logger in my scripts...
	Merged Red's createAccount call -- will be interesting to see what people will do with this.
	Merged Red's guild fisher for coleslaw. 
	Merged Searos' EssenceMiner
	Merged Searos' AIOSmelter new support for Al-Kharid
	Merged Searos' VarrockSmither
	Merged Searos' FletchnBankBows update
	Fixed shopItemID bug in Controller shop methods 
	Merged Red's IntelliJ/gradle support
	Merged Searos' Woodcutter update -- improved pathfinding, ability to stop added. 
	Merged Searos' SpinStrings
	HerbHarvester crashing fixed.
	SleepListener added. When sleep is detected, image will be saved as hc.bmp.
	
	
FEB 4 2021
	Rearranged foodIds so that cake slices get aten before whole cakes.
	getBankItemCount() works again.
	AIOThiever now supports banking in Ardougne Square.
	AIOThiever now supports command line arguments.
	AIOThiever will now properly keep trying to logout.
	AKMiner will now properly bank silver.
	Added Searos' new script: FletchnBankBows
	Added Searos' updated PowercraftTalisman
	Added ceikry's ceikplates (SBot)
	Added Gah's GuildMine_v7 (SBot) 
	AIOCooker will now properly bank anchovies.
	
	
FEB 2 2021
	You can now run scripts from the command line! If it cannot find the script, it will immediately terminate and return 1.
	Added dropItem(id, amt) to Controller
	Added Searos' Woodcutting and PowercraftTalisman scripts. Very cool stuff!!!
	Added Gah's fixed SBot scripts: YanilleIron and drayfish

FEB 1 2021
	Fixed GuildFish2 not handling sharks correctly.
	Removed GuildFish to reduce confusion with GuildFish2. It also is a bad script compared to GuildFish2.
	Batching support added to GuildFish2. 
	AIOCooker properly exported, users should see it now in their listing.
	AIOSmelter will now properly work on worlds where there is no right click bank option.
	AIOSmelter will now not take forever to deposit items.
	AIOSmelter now supports batching.
	Added note about PowerTuna being used in Karamja, not Catherby.
	AKMiner, AIOCooker and AIOSmelter will now keep trying to talk to a banker.
	AIOFighter acts a little less dumb. It's still dumb though.
	AIOFighter will no longer crash if no monsters are around while you are maging.
	AIOFighter will mage monsters like it is supposed to now. 
	AIOFighter will now logout when out of arrows.
	Removed batching from GuildFisher2 because it was causing issues. Needs better fix + actual testing.
	Fixed banking and batching on AIOCooker, AIOSmelter, AKMiner, GuildFisher2
	Implemented gate/door object opening on AIOFighter. Still needs wall object opening.
	Cleaned showed me what was wrong with walkToNpcAsync(...)! WOOHOO!
	AIOFighter will now handle gates. Doors are TBD.
	AIOCooker will no longer accidentally drop cooked food.
	HarvesterTrainer script added!
	HerbHarvester script added!
	
JAN 31 2021
	Tyler added alphabetical sorting to the script launcher
	Updated AIOFighter to no longer attempt to pickup loot outside of range. It will still attempt to attack NPCs out of range, if that is the case, you need to increase your wander distance.
	Updated AIOFighter to no longer get stuck burying bones in combat
	Updated PowerFletcha to work better with batching
	Dan renamed PreservationCache to UraniumCache to be much more user friendly and updated documentation.
	Tyler made the script selector look amazing!
	Tyler moved the SBot script folder to a much more friendly location for SBot script development.
	Updated README to reflect new changes regarding the src script folder change.
	Instead of compiling classes, users will now compile the entire JAR. This fixes a large issue we had with users not being able to run their own SBot scripts after the last Script Loader change.
	AIOCooker script added!
	SBot's UseOnObject call has been fixed. This means Flax22k and BarbFisher2 now work. Getting closer to 100% SBot compatability!
	BarbFisher2 added to project. 
	AIOFighter updated to act less dumb when dealing with a lot of bones or loot. 

JAN 30 2021
	Fixed client crashes caused by improper cache files.
	AIOThiever script added.
	Fixed bug where bot was attempting to thieve / fight NPCs which were already in combat.
	PowerFletcha script was added.
	AKMiner script was added.
	Tyler fixed Controller.dropItems(int)
	Tyler added Controller.isBatching
	PowerFletcha script was fixed to work properly on Coleslaw.
	isBatching support added to Dvorak's scripts
	New SBot function added for batching support: WaitForBatchFinish()
	Sbot's TalkToNPC bug fixed.

JAN 29 2021
	Initial alpha release.
	setFightMode bug fixed.
